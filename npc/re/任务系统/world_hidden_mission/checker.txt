// ===== 【世界隐藏任务】【神之力】：修炼条件检查器 ================================ 


// 【神之力】修炼达成条件检查: EQI_HEAD_TOP 头上
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_HEAD_TOP	{
	@equip_id = getequipid(EQI_HEAD_TOP);
	@Ancient_Bandana = 62211;	// 古老的 破裂的王冠

	if (@equip_id == @Ancient_Bandana) {
		if (callfunc("f_check_weight")) {
			delitem(@Ancient_Bandana, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_HEAD_MID 头中
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_HEAD_MID	{
	@equip_id = getequipid(EQI_HEAD_MID);
	@Ancient_Blinker = 62295;	// 古老的 支离破碎的布片

	if (@equip_id == @Ancient_Blinker) {
		if (callfunc("f_check_all_stats")) {
			delitem(@Ancient_Blinker, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_HEAD_LOW 头下
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_HEAD_LOW	{
	@equip_id = getequipid(EQI_HEAD_LOW);
	@Ancient_Leaf = 62270;	// 古老的 断针

	if (@equip_id == @Ancient_Leaf) {
		if (callfunc("f_check_cast")) {
			delitem(@Ancient_Leaf, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_ARMOR 铠甲
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_ARMOR	{
	@equip_id = getequipid(EQI_ARMOR);
	@Ancient_Shirt = 62301;		// 古老的 破烂烂的衣服
	@Ancient_Mail = 62328;		// 古老的 破裂的铠甲一角
	
	if (@equip_id == @Ancient_Shirt) {
		if (callfunc("f_check_mdef")) {
			delitem(@Ancient_Shirt, 1);
		}

	} else if (@equip_id == @Ancient_Mail) {
		if (callfunc("f_check_def")) {
			delitem(@Ancient_Mail, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_HAND_R 右手（武器）
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_HAND_R	{
	@equip_id = getequipid(EQI_HAND_R);
	@Ancient_Knife = 61201;			// 古老的 破裂的剑	
	@Ancient_Unique_Sword = 62222;	// 古老的 特别的剑
	@Ancient_Shuriken = 61202;		// 古老的 破旧之手里剑
	@Ancient_Book = 61550;			// 古老的 撕裂的魔法书
	@Ancient_N_Mace = 61545;		// 古老的 新手锤
	@Ancient_Tourist_Bow = 61749;	// 古老的 旅行者之弓
	@Ancient_Double_Bound = 61736;	// 古老的 连发弓

	if (@equip_id == @Ancient_Knife) {
		if (callfunc("f_check_atk")) {
			delitem(@Ancient_Knife, 1);
		}

	} else if (@equip_id == @Ancient_Unique_Sword) {
		if (callfunc("f_check_aspd")) {
			delitem(@Ancient_Unique_Sword, 1);
		}

	} else if (@equip_id == @Ancient_Shuriken) {
		if (callfunc("f_check_cri")) {
			delitem(@Ancient_Shuriken, 1);
		}

	} else if (@equip_id == @Ancient_Book) {
		if (callfunc("f_check_matk")) {
			delitem(@Ancient_Book, 1);
		}

	} else if (@equip_id == @Ancient_N_Mace) {
		if (callfunc("f_check_atk")) {
			delitem(@Ancient_N_Mace, 1);
		}

	} else if (@equip_id == @Ancient_Tourist_Bow) {
		if (callfunc("f_check_hit")) {
			delitem(@Ancient_Tourist_Bow, 1);
		}

	} else if (@equip_id == @Ancient_Double_Bound) {
		if (callfunc("f_check_aspd")) {
			delitem(@Ancient_Double_Bound, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_HAND_L 左手（盾牌）
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_HAND_L	{
	@equip_id = getequipid(EQI_HAND_L);
	@Ancient_Guard = 62101;				// 古老的 破裂的硬壳
	@Ancient_Unique_Shield = 63333;		// 古老的 特别的盾牌

	if (@equip_id == @Ancient_Guard) {
		if (callfunc("f_check_weapon_return")) {
			delitem(@Ancient_Guard, 1);
		}

	} else if (@equip_id == @Ancient_Unique_Shield) {
		if (callfunc("f_check_magic_return")) {
			delitem(@Ancient_Unique_Shield, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_GARMENT 披肩
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_GARMENT	{
	@equip_id = getequipid(EQI_GARMENT);
	@Ancient_Hood = 62501;		// 古老的 破旧的围巾

	if (@equip_id == @Ancient_Hood) {
		if (callfunc("f_check_flee")) {
			delitem(@Ancient_Hood, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_SHOES 鞋子
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_SHOES	{
	@equip_id = getequipid(EQI_SHOES);
	@Ancient_Sandals = 62401;		// 古老的 被盗的凉鞋
	
	if (@equip_id == @Ancient_Sandals) {
		if (callfunc("f_check_speed")) {
			delitem(@Ancient_Sandals, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_ACC_R 装饰品（右）
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_ACC_R	{
	@equip_id = getequipid(EQI_ACC_R);
	@Ancient_Flower_Ring = 62612;		// 古老的 破损的魔法石
	
	if (@equip_id == @Ancient_Flower_Ring) {
		if (callfunc("f_check_sp_recov")) {
			delitem(@Ancient_Flower_Ring, 1);
		}
	}
	return;
}


// 【神之力】修炼达成条件检查: EQI_ACC_L 装饰品（左）
//============================================================ 
// - param: 无参数
// - return: 无
function	script	F_CHECK_ACC_L	{
	@equip_id = getequipid(EQI_ACC_L);
	@Ancient_Belt = 62627;		// 古老的 破坏的令牌
	
	if (@equip_id == @Ancient_Belt) {
		if (callfunc("f_check_hp_recov")) {
			delitem(@Ancient_Belt, 1);
		}
	}
	return;
}


/*************************************************************************/


// 【负重上限增益】修炼达成条件检查: 
//    在负重 <= 200.0 的状态下受到任意攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_weight	{
	@is_ok = false;
	@weight_limit = 2000;
	if (Weight <= @weight_limit) {		// 负重超过限制
		set AC_HEAD_TOP, 0;				// 计数清零

	} else {
		@count_limit = 10000;
		callfunc("f_show_mission_progress", EQI_HEAD_TOP, AC_HEAD_TOP, @count_limit);
		if (AC_HEAD_TOP >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_WEIGHT, true;
			callfunc("f_mission_finish", "负重上限增益");
		}
	}
	return @is_ok;
}


// 【六维全能力增益】修炼达成条件检查: 
//    在负重 <= 200.0 的状态下受到物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_all_stats	{
	@is_ok = false;
	@weight_limit = 2000;
	if (Weight <= @weight_limit) {		// 负重超过限制
		set AC_HEAD_MID, 0;				// 计数清零

	} else {
		@count_limit = 10000;
		callfunc("f_show_mission_progress", EQI_HEAD_MID, AC_HEAD_MID, @count_limit);
		if (AC_HEAD_MID >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_ALL_STATS, true;
			callfunc("f_mission_finish", "六维全能力增益");
		}
	}
	return @is_ok;
}


// 【无念咏唱】修炼达成条件检查: 
//    在负重 <= 200.0 的状态下受到魔法攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_cast	{
	@is_ok = false;
	@weight_limit = 2000;
	if (Weight <= @weight_limit) {		// 负重超过限制
		set AC_HEAD_LOW, 0;				// 计数清零

	} else {
		@count_limit = 10000;
		callfunc("f_show_mission_progress", EQI_HEAD_LOW, AC_HEAD_LOW, @count_limit);
		if (AC_HEAD_LOW >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_CAST, true;
			callfunc("f_mission_finish", "无念咏唱");
		}
	}
	return @is_ok;
}


// 【物理攻击增益】修炼达成条件检查: 
//    使用物理攻击 10W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_atk	{
	@is_ok = false;
	@count_limit = 100000;
	callfunc("f_show_mission_progress", EQI_HAND_R, AC_HAND_R, @count_limit);
	if (AC_HAND_R >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_ATK, true;
		callfunc("f_mission_finish", "物理攻击增益");
	}
	return @is_ok;
}


// 【魔法攻击增益】修炼达成条件检查: 
//    使用魔法攻击 10W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_matk	{
	@is_ok = false;
	@count_limit = 100000;
	callfunc("f_show_mission_progress", EQI_HAND_R, AC_HAND_R, @count_limit);
	if (AC_HAND_R >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_MATK, true;
		callfunc("f_mission_finish", "魔法攻击增益");
	}
	return @is_ok;
}


// 【攻击速度增益】修炼达成条件检查: 
//    使用物理攻击 10W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_aspd	{
	@is_ok = false;
	@count_limit = 100000;
	callfunc("f_show_mission_progress", EQI_HAND_R, AC_HAND_R, @count_limit);
	if (AC_HAND_R >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_ASPD, true;
		callfunc("f_mission_finish", "攻击速度增益");
	}
	return @is_ok;
}


// 【暴击率增益】修炼达成条件检查: 
//    使用物理攻击 10W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_cri	{
	@is_ok = false;
	@count_limit = 100000;
	callfunc("f_show_mission_progress", EQI_HAND_R, AC_HAND_R, @count_limit);
	if (AC_HAND_R >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_CRI, true;
		callfunc("f_mission_finish", "暴击率增益");
	}
	return @is_ok;
}


// 【命中率增益】修炼达成条件检查: 
//    使用物理攻击 10W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_hit	{
	@is_ok = false;
	@count_limit = 100000;
	callfunc("f_show_mission_progress", EQI_HAND_R, AC_HAND_R, @count_limit);
	if (AC_HAND_R >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_HIT, true;
		callfunc("f_mission_finish", "命中率增益");
	}
	return @is_ok;
}


// 【物理防御增益】修炼达成条件检查: 
//    受到物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_def	{
	@is_ok = false;
	@count_limit = 10000;
	callfunc("f_show_mission_progress", EQI_ARMOR, AC_ARMOR, @count_limit);
	if (AC_ARMOR >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_DEF, true;
		callfunc("f_mission_finish", "物理防御增益");
	}
	return @is_ok;
}


// 【魔法防御增益】修炼达成条件检查: 
//    受到魔法攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_mdef	{
	@is_ok = false;
	@count_limit = 10000;
	callfunc("f_show_mission_progress", EQI_ARMOR, AC_ARMOR, @count_limit);
	if (AC_ARMOR >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_MDEF, true;
		callfunc("f_mission_finish", "魔法防御增益");
	}
	return @is_ok;
}


// 【回避增益】修炼达成条件检查: 
//    受到任意攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_flee	{
	@is_ok = false;
	@count_limit = 10000;
	callfunc("f_show_mission_progress", EQI_GARMENT, AC_GARMENT, @count_limit);
	if (AC_GARMENT >= @count_limit) {
		@is_ok = true;
		set GOD_POWER_FLEE, true;
		callfunc("f_mission_finish", "回避增益");
	}
	return @is_ok;
}


// 【移动速度增益】修炼达成条件检查: 
//    在负重 90% 的状态下游历所有城市（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_speed	{
	@is_ok = false;
	@is_over_weight = callfunc("f_is_over_weight");		// 检查是否处于负重 90% 状态
	if (@is_over_weight == false) {
		callfunc("f_reset_city_checkpoints");			// 重置所有城市的游历标记

	} else {
		callfunc("f_mark_city_checkpoint");				// 标记城市检查点
		@is_ok = callfunc("f_check_city_checkpoints");	// 检查是否已游历所有城市
		if (@is_ok == true) {
			set GOD_POWER_SPEED, true;
			callfunc("f_mission_finish", "移动速度增益");
		}
	}
	return @is_ok;
}


// 【物理反射】修炼达成条件检查: 
//    不移动、被物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_weapon_return	{
	@is_ok = false;
	@count_limit = 10000;
	@is_move = callfunc("f_is_move");
	if (@is_move == true) {
		set AC_HAND_L, 0;		// 计数清零

	} else {
		callfunc("f_show_mission_progress", EQI_HAND_L, AC_HAND_L, @count_limit);
		if (AC_HAND_L >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_WEAPON_RETURN, true;
			callfunc("f_mission_finish", "物理反射");
		}
	}
	return @is_ok;
}


// 【魔法反射】修炼达成条件检查: 
//    不移动、被物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_magic_return	{
	@is_ok = false;
	@count_limit = 10000;
	@is_move = callfunc("f_is_move");
	if (@is_move == true) {
		set AC_HAND_L, 0;

	} else {
		callfunc("f_show_mission_progress", EQI_HAND_L, AC_HAND_L, @count_limit);
		if (AC_HAND_L >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_MAGIC_RETURN, true;
			callfunc("f_mission_finish", "魔法反射");
		}
	}
	return @is_ok;
}


// 【HP 回复增益】修炼达成条件检查: 
//    不移动、被物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_hp_recov	{
	@is_ok = false;
	@count_limit = 10000;
	@is_move = callfunc("f_is_move");
	if (@is_move == true) {
		set AC_ACC_L, 0;

	} else {
		callfunc("f_show_mission_progress", EQI_ACC_L, AC_ACC_L, @count_limit);
		if (AC_ACC_L >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_HP_RECOV, true;
			callfunc("f_mission_finish", "HP 回复增益");
		}
	}
	return @is_ok;
}


// 【SP 回复增益】修炼达成条件检查: 
//    不移动、被物理攻击 1W 次（不死亡）
//============================================================ 
// - param: 无参数
// - return: 是否达成条件
function	script	f_check_sp_recov	{
	@is_ok = false;
	@count_limit = 10000;
	@is_move = callfunc("f_is_move");
	if (@is_move == true) {
		set AC_ACC_R, 0;

	} else {
		callfunc("f_show_mission_progress", EQI_ACC_R, AC_ACC_R, @count_limit);
		if (AC_ACC_R >= @count_limit) {
			@is_ok = true;
			set GOD_POWER_SP_RECOV, true;
			callfunc("f_mission_finish", "SP 回复增益");
		}
	}
	return @is_ok;
}


/*************************************************************************/


// 检查玩家是否移动过
//============================================================ 
// - param: 无参数
// - return: 是否移动
function	script	f_is_move	{
	@position$ = callfunc("F_POSTION");
	@is_move = !(LAST_POSITION$ == @position$);
	LAST_POSITION$ = @position$;
	return @is_move;
}


// 检查玩家负重是否超过 90%
//============================================================ 
// - param: 无参数
// - return: 是否超过 90% 负重
function	script	f_is_over_weight	{
	// 由于系统不支持浮点数除法，只能通过加减法判断是否超过 90%
	@one_tenth = MaxWeight / 10;
	@is_over = (Weight + @one_tenth) >= MaxWeight;
	return @is_over;
}


// 检查玩家是否游历了所有城市
//============================================================ 
// - param: 无参数
// - return: 是否完成城市游历
function	script	f_check_city_checkpoints	{
	@CITY_NUM = 36;
	@is_all_ok = true;
	for (@i = 0; @i <= @CITY_NUM; @i++) {
		if (@i != 15 && @i != 16) {			// 这两个地点只有 GM 可以用 @go 命令传送过去
			@is_all_ok &= CITY_CHECKPOINTS[@i];
		}
	}
	return @is_all_ok;
}


